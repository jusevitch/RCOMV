<?xml version="1.0"?>

<launch>
    <arg name="ugv_name" default="r1_sim"/>
    <arg name="enable_logging" default="false" />
    <arg name="enable_ground_truth" default="true" />
    <arg name="log_file" default="$(arg ugv_name)" />
    <arg name="name_space" default="$(arg ugv_name)" />

    <arg name="color" default="Black" />
    <arg name="lead_x" default="6" />
    <arg name="lead_y" default="6" />
    <arg name="lead_z" default="10" />
    <arg name="n" default="0"/>

    <!-- Args specifying whether this is a Gazebo simulation or real implementation -->
    <arg name="gazebo" default="1"/>`

    <!-- Default parameters for agent initialization -->
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0"/>
    <arg name="yaw" default="0"/>

    <!-- Parameters for the trajectory tracking controller -->
    <arg name="Ri" default="0" />
    <arg name="alphai" default="0"/>
    <arg name="b" default="0.05" />
    <arg name="k1" default="4" />
    <arg name="k2" default="4"/>
    <arg name="k3" default="10"/>
    <arg name="vmax" default="6" />
    <arg name="wmax" default="4"/>
    <arg name="mu2" default="100"/>
    <arg name="path_type" default="NaN" />
    <arg name="xc" default="0" />
    <arg name="yc" default="0" />
    <arg name="R" default="4" />
    <arg name="R1" default="5" />
    <arg name="R2" default="10" />
    <arg name="wd" default="0.5" />
    <arg name="qi_x" default="10" />
    <arg name="qi_y" default="0" />
    <arg name="qi_theta" default="1.57" />
    <arg name="qf_x" default="-10" />
    <arg name="qf_y" default="0" />
    <arg name="qf_theta" default="4.71" />
    <arg name="poly_k" default="20" />
    <arg name="T" default="15" />
    <arg name="endless" default="false" />
    <arg name="agent_index" default="0"/>
    <arg name="rover_number" default="0"/>
    <arg name="number_of_obstacles" default="0"/>
    <arg name="obstacle_radii" default="[]"/>

    <!-- Parameters for collision avoidance -->
    <arg name="ds" default="1"/>
    <arg name="dc" default="2"/>

    <!-- Parameter for gdb and xterm output -->
    <arg name="gdb_xterm_output" default="0"/>

    <group ns="$(arg name_space)" if="$(arg gazebo)">
        <!-- NOTE: THIS IS THE NODE THAT USES THE cmd_vel_mux TOPIC -->
        <!-- Launches the UGV and low level controller in Gazebo -->
        <include file="$(find rcomv_r1)/launch/spawn_ugv.launch">
            <arg name="namespace" value="$(arg name_space)" />
            <!-- namespace -->
            <arg name="ugv_name" value="$(arg ugv_name)" />
            <arg name="model" value="$(find rcomv_r1)/urdf/r1_sim.urdf.xacro" />
            <arg name="enable_logging" value="$(arg enable_logging)" />
            <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
            <arg name="log_file" value="$(arg log_file)"/>
            <arg name="x" value="$(arg x)"/>
            <arg name="y" value="$(arg y)"/>
            <arg name="z" value="$(arg z)"/>
            <arg name="yaw" value="$(arg yaw)" />
        </include>

    
        <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher"
            args="0 0 0 0 0 0 base_link base_footprint 40" />
        <node name="fake_joint_calibration" pkg="rostopic" type="rostopic"
            args="pub /calibrated std_msgs/Bool true" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    </group>

    <group ns="$(arg name_space)">
    
        <!-- In/Output Linearization controller node with NO debugging -->
        <node unless="$(arg gdb_xterm_output)" name="IO_control_collision_node" pkg="rcomv_r1" type="IO_control_collision">
            
            <param name="gazebo" value="$(arg gazebo)"/>
            <param name="Ri" value="$(arg Ri)" />
            <param name="alphai" value="$(arg alphai)"/>
            <param name="agent_index" value="$(arg agent_index)"/>
            <param name="rover_number" value="$(arg rover_number)"/>

            <param name="n" value="$(arg n)"/>
            <param name="b" value="$(arg b)" />
            <param name="k1" value="$(arg k1)" />
            <param name="k2" value="$(arg k2)"/>
            <param name="k3" value="$(arg k3)"/>
            <param name="vmax" value="$(arg vmax)" />
            <param name="wmax" value="$(arg wmax)"/>
            <param name="mu2" value="$(arg mu2)"/>

            <param name="path_type" value="$(arg path_type)" />
            <param name="xc" value="$(arg xc)" />
            <param name="yc" value="$(arg yc)" />
            <param name="R" value="$(arg R)" />
            <param name="R1" value="$(arg R1)" />
            <param name="R2" value="$(arg R2)" />
            <param name="wd" value="$(arg wd)" />

            <param name="qi_x" value="$(arg qi_x)" />
            <param name="qi_y" value="$(arg qi_y)" />
            <param name="qi_theta" value="$(arg qi_theta)" />
            <param name="qf_x" value="$(arg qf_x)" />
            <param name="qf_y" value="$(arg qf_y)" />
            <param name="qf_theta" value="$(arg qf_theta)" />
            <param name="poly_k" value="$(arg poly_k)" />
            <param name="T" value="$(arg T)" />
            <param name="endless" value="$(arg endless)" />

            <param name="ds" value="$(arg ds)"/>
            <param name="dc" value="$(arg dc)"/>


            <param name="number_of_obstacles" value="$(arg number_of_obstacles)"/>
            <rosparam param="obstacle_radii" subst_value="True">$(arg obstacle_radii)</rosparam>
        </node>

        <!-- In/Output Linearization controller node WITH debugging-->
        <!-- No wmsr node involved -->
        <node if="$(arg gdb_xterm_output)" name="IO_control_collision_node" pkg="rcomv_r1" type="IO_control_collision" launch-prefix="xterm -e gdb -ex run --args" output="screen">
            
            <param name="gazebo" value="$(arg gazebo)"/>
            <param name="Ri" value="$(arg Ri)" />
            <param name="alphai" value="$(arg alphai)"/>
            <param name="agent_index" value="$(arg agent_index)"/>
            <param name="rover_number" value="$(arg rover_number)"/>

            <param name="n" value="$(arg n)"/>
            <param name="b" value="$(arg b)" />
            <param name="k1" value="$(arg k1)" />
            <param name="k2" value="$(arg k2)"/>
            <param name="k3" value="$(arg k3)"/>
            <param name="vmax" value="$(arg vmax)" />
            <param name="wmax" value="$(arg wmax)"/>
            <param name="mu2" value="$(arg mu2)"/>

            <param name="path_type" value="$(arg path_type)" />
            <param name="xc" value="$(arg xc)" />
            <param name="yc" value="$(arg yc)" />
            <param name="R" value="$(arg R)" />
            <param name="R1" value="$(arg R1)" />
            <param name="R2" value="$(arg R2)" />
            <param name="wd" value="$(arg wd)" />

            <param name="qi_x" value="$(arg qi_x)" />
            <param name="qi_y" value="$(arg qi_y)" />
            <param name="qi_theta" value="$(arg qi_theta)" />
            <param name="qf_x" value="$(arg qf_x)" />
            <param name="qf_y" value="$(arg qf_y)" />
            <param name="qf_theta" value="$(arg qf_theta)" />
            <param name="poly_k" value="$(arg poly_k)" />
            <param name="T" value="$(arg T)" />
            <param name="endless" value="$(arg endless)" />

            <param name="ds" value="$(arg ds)"/>
            <param name="dc" value="$(arg dc)"/>

            <param name="number_of_obstacles" value="$(arg number_of_obstacles)"/>
            <rosparam param="obstacle_radii" subst_value="true">$(arg obstacle_radii) </rosparam>

        </node>
        

    </group>

</launch>