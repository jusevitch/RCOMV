<?xml version="1.0"?>

<launch>
    	<arg name="ugv_name" default="r1_sim"/>
    	<arg name="enable_logging" default="false" />
    	<arg name="enable_ground_truth" default="true" />
  	<arg name="log_file" default="$(arg ugv_name)" />
    	<arg name="name_space" default="$(arg ugv_name)" />

	<!-- parameters for the WMSR node -->
	<arg name="wmsr_node" default="false" />
	<arg name="x" default = "0" />
	<arg name="y" default = "0" />
	<arg name="z" default = "0.1" />
        <arg name="yaw" default="0.0" />
	<arg name="n" default="15" />
	<arg name="k" default="7" />
	<arg name="idx" default="1" />
	<arg name="role" default="2" />
	<arg name="F" default="0" />
	<arg name="demo" default="2" />

	<arg name="color" default="Black" />

	<arg name="lead_x" default="6" />
	<arg name="lead_y" default="6" />
	<arg name="lead_z" default="10" />


	<!-- parameters for the trajectory tracking conteoller -->
      <arg name="b" default="0.05" />
      <arg name="k1" default="4" />
      <arg name="k2" default="4"/>
      <arg name="vmax" default="6" />
      <arg name="wmax" default="4"/>
      <arg name="path_type" default="circular" />
 

	<group ns="$(arg name_space)">
	      <!-- ugv robot node -->
	 <include file="$(find rcomv_r1)/launch/spawn_ugv.launch">
	        <arg name="namespace" value="$(arg name_space)" />  <!-- namespace -->
      		<arg name="ugv_name" value="$(arg ugv_name)" />
      		<arg name="model" value="$(find rcomv_r1)/urdf/r1_sim.urdf.xacro" />
      		<arg name="enable_logging" value="$(arg enable_logging)" />
      		<arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      		<arg name="log_file" value="$(arg log_file)"/>
      		<arg name="x" value="$(arg x)"/>
      		<arg name="y" value="$(arg y)"/>
	        <arg name="z" value="$(arg z)"/>
		<arg name="yaw" value="$(arg yaw)" />
    	</include>

      	<node name="tf_footprint_base" pkg="tf" type="static_transform_publisher"
            	args="0 0 0 0 0 0 base_link base_footprint 40" />

      	<node name="fake_joint_calibration" pkg="rostopic" type="rostopic"
            	args="pub /calibrated std_msgs/Bool true" />

      	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
      	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

      	<!-- PID controller node -->
        <node name="InOutLin_controller_node" pkg="rcomv_r1" type="InputOutputLin_Controller" launch-prefix="xterm -e"    output="screen" unless="$(arg wmsr_node)">
      			<param name="b" value="$(arg b)" />
      			<param name="k1" value="$(arg k1)" />
      			<param name="k2" value="$(arg k2)"/>
      			<param name="vmax" value="$(arg vmax)" />
      			<param name="wmax" value="$(arg wmax)"/>
      			<param name="path_type" value="$(arg path_type)" />
      	</node>
        <node name="InOutLin_controller_node" pkg="rcomv_r1" type="InputOutputLin_Controller" if="$(arg wmsr_node)">
      			<param name="b" value="$(arg b)" />
      			<param name="k1" value="$(arg k1)" />
      			<param name="k2" value="$(arg k2)"/>
      			<param name="vmax" value="$(arg vmax)" />
      			<param name="wmax" value="$(arg wmax)"/>
      			<param name="path_type" value="$(arg path_type)" />
      	</node>


	<!-- WMSR node -->
	<node name="wmsr_node" pkg="rcomv_r1" type="wmsr_node" if="$(arg wmsr_node)">
		<param name="n" value="$(arg n)" />
		<param name="k" value="$(arg k)" />
		<param name="F" value="$(arg F)" />
		<param name="idx" value="$(arg idx)" />
		<param name="role" value="$(arg role)" />

		<param name="x" value="$(arg x)" />
		<param name="y" value="$(arg y)" />
		<!-- param name="z" value="$(arg z)" /-->

		<param name="demo" value="$(arg demo)" />

		<param name="cx" value="$(arg lead_x)" />
		<param name="cy" value="$(arg lead_y)" />
		<!--param name="cz" value="$(arg lead_z)" /-->
	</node>



     </group>


</launch>
