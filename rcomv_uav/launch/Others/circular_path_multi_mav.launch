<launch>
  <arg name="mav_name" default="firefly"/>
  <arg name="world_name" default="basic"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="true"/>
    <!-- <arg name="gui" value="false"/> -->
  </include>

  <group ns="Alpha">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="namespace" value="Alpha" />
      <arg name="mav_name" value="firefly" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly"/>
      <arg name="x" value="0.0"/>
      <arg name="y" value="0.0"/>	
    </include>
    
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    
    <arg name="path" default="[2, 2, 3, 2]"/>
    <node name="circular_path_publisher" pkg="rcomv_uav" type="circular_path_publisher" output="screen" launch-prefix="xterm -e">
	<rosparam param="path" subst_value="True">$(arg path)</rosparam>
        <param name="shift_angle" value="3.14"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>


  <group ns="Beta">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="namespace" value="Beta" />	
      <arg name="mav_name" value="firefly" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly"/>
      <arg name="x" value="1.0"/>
      <arg name="y" value="0.0"/>	
    </include>
    
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    
    <arg name="path" default="[2, 2, 3, 4]"/>
    <node name="circular_path_publisher" pkg="rcomv_uav" type="circular_path_publisher" output="screen" launch-prefix="xterm -e">
	<rosparam param="path" subst_value="True">$(arg path)</rosparam>
      	<param name="shift_angle" value="1.57"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

  <group ns="Gamma">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="namespace" value="Gamma" />
      <arg name="mav_name" value="firefly" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly"/>
      <arg name="x" value="2.0"/>
      <arg name="y" value="0.0"/>	
    </include>
    
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    
    <arg name="path" default="[2, 2, 3, 6]"/>
    <node name="circular_path_publisher" pkg="rcomv_uav" type="circular_path_publisher" output="screen" launch-prefix="xterm -e">
	<rosparam param="path" subst_value="True">$(arg path)</rosparam>
	<param name="shift_angle" value="0"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>
</launch>
