<launch>
  <arg name="mav_name" default="firefly"/>
  <arg name="world_name" default="terrain_copy"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
     <arg name="world_name" value="$(find rcomv_uav)/worlds/$(arg world_name).world" />
    <arg name="paused" value="true"/>
  </include>



<!-- launch ugv robot 1 -->
  <arg name="init_x" default="12"/>
  <arg name="init_y" default="-40"/>
  <arg name="laser_enabled" default="true"/>
  <arg name="kinect_enabled" default="false"/>

  <include file="$(find husky_gazebo)/launch/spawn_husky.launch">
    <arg name="robot_namespace" value="/"/>
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="kinect_enabled" value="$(arg kinect_enabled)"/>
    <arg name="x" default="$(arg init_x)"/>
    <arg name="y" default="$(arg init_y)"/>
    <arg name="yaw" default="0"/>
  </include>
<!--
<group ns="/">
 
   <node
    pkg = "rcomv_ugv"
    type = "pidctrl"
    name = "PIDcontroller"
    output = "screen"
    launch-prefix="xterm -e" 
  >
    <param name = "Kp1" value = "0.5"/>
    <param name = "Kp2" value = "0.8"/>
    <param name = "Kd1" value = "0.0"/>
    <param name = "Kd2" value = "0.0"/>
    <param name = "Ki1" value = "0.0"/>
    <param name = "Ki2" value = "0.0"/>
	<param name="goal_x" value = "60"/>
	<param name="goal_y" value = "0"/> 
  </node>
</group>
-->

<!-- launch ugv robot 2 -->

  <include file="$(find husky_gazebo)/launch/spawn_husky.launch">
    <arg name="robot_namespace" value="/ugv_2"/>
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="kinect_enabled" value="$(arg kinect_enabled)"/>
    <arg name="x" default="10"/>
    <arg name="y" default="-40"/>
    <arg name="yaw" default="0"/>
  </include>






<!-- UAV robot 1 -->
  <group ns="Alpha">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="namespace" value="Alpha" />
      <arg name="mav_name" value="firefly" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly"/>
      <arg name="x" value="35.0"/>
      <arg name="y" value="-40.0"/>	
    </include>
    
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    
    <arg name="path" default="[25, -40, 15, 10]"/>
    <node name="circular_path_publisher" pkg="rcomv_uav" type="circular_path_publisher" output="screen" launch-prefix="xterm -e">
	<rosparam param="path" subst_value="True">$(arg path)</rosparam>
	<param name="shift_angle" value="0"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

<!-- UAV robot 2 -->
  <group ns="Beta">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="namespace" value="Beta" />	
      <arg name="mav_name" value="firefly" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly"/>
      <arg name="x" value="36.0"/>
      <arg name="y" value="-40.0"/>	
    </include>
    
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    
    <arg name="path" default="[25, -40, 15, 12]"/>
    <node name="circular_path_publisher" pkg="rcomv_uav" type="circular_path_publisher" output="screen" launch-prefix="xterm -e">
	<rosparam param="path" subst_value="True">$(arg path)</rosparam>
	<param name="shift_angle" value="0"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>


<!-- UAV robot 3 -->
  <group ns="Gamma">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="namespace" value="Gamma" />
      <arg name="mav_name" value="firefly" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly"/>
      <arg name="x" value="37.0"/>
      <arg name="y" value="-40.0"/>	
    </include>
    
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    
    <arg name="path" default="[25, -40, 15, 14]"/>
    <node name="circular_path_publisher" pkg="rcomv_uav" type="circular_path_publisher" output="screen" launch-prefix="xterm -e">
	<rosparam param="path" subst_value="True">$(arg path)</rosparam>
	<param name="shift_angle" value="3.14"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

<!-- UAV robot 4 --> 
  <group ns="Delta">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="namespace" value="Delta" />
      <arg name="mav_name" value="firefly" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly"/>
      <arg name="x" value="38.0"/>
      <arg name="y" value="-40.0"/>	
    </include>
    
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    
    <arg name="path" default="[25, -40, 15, 15]"/>
    <node name="circular_path_publisher" pkg="rcomv_uav" type="circular_path_publisher" output="screen" launch-prefix="xterm -e">
	<rosparam param="path" subst_value="True">$(arg path)</rosparam>
	<param name="shift_angle" value="0"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>


<!-- UAV robot 5 --> 
  <group ns="Epsilon">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="namespace" value="Epsilon" />
      <arg name="mav_name" value="firefly" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="firefly"/>
      <arg name="x" value="39.0"/>
      <arg name="y" value="-40.0"/>	
    </include>
    
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_firefly.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/firefly.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    
    <arg name="path" default="[25, -40, 15, 17]"/>
    <node name="circular_path_publisher" pkg="rcomv_uav" type="circular_path_publisher" output="screen" launch-prefix="xterm -e">
	<rosparam param="path" subst_value="True">$(arg path)</rosparam>
	<param name="shift_angle" value="3.14"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>


</launch>
